--- a/src/mailman/utilities/filesystem.py
+++ b/src/mailman/utilities/filesystem.py
@@ -54,13 +54,22 @@
     :param mode: The numeric permission mode to use.
     :type mode: int
     """
-    with suppress(FileExistsError):
-        with umask(0):
-            os.makedirs(path, mode)
+    with umask(0):
+        # In order for os.walk to set permissions appropriately if required,
+        # the FIRST NON EXISTENT parent directory of the one we wanted to
+        # create has to be provided.
+        upwards = first_inexistent_directory(path)
+
+        # The directory exists, nothing to do.
+        if upwards is None:
+            return
+
+        os.makedirs(path, mode)
+
     # Some systems such as FreeBSD ignore mkdir's mode, so walk the just
     # created directories and try to set the mode, ignoring any OSErrors that
     # occur here.
-    for dirpath, dirnames, filenames in os.walk(path):
+    for dirpath, _, _ in os.walk(upwards):
         with suppress(OSError):
             os.chmod(dirpath, mode)
 
@@ -69,3 +78,21 @@
 def safe_remove(path):
     with suppress(FileNotFoundError):
         os.remove(path)
+
+
+def first_inexistent_directory(path):
+    """Splits iteratively a path until it gives the first non-existent directory in the tree.
+
+    That is, if /home/user/foo/bar/baz is given to the function, and /home/user/foo/bar
+    doesn't exist but /home/user/foo exists, returns /home/user/foo/bar.
+    """
+    directory = path
+    rhs = None
+
+    while True:
+        if os.path.exists(directory) and os.path.isdir(directory):
+            if rhs is None:
+                return None
+            else:
+                return os.path.join(directory, rhs)
+        directory, rhs = os.path.split(directory)
